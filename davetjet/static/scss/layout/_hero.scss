@use '../abstracts/variables';
@use '../abstracts/animations';
@use '../abstracts/mixins' as *;

.hero-container {
  background: linear-gradient(rgba(map-get(variables.$colors, primary-dark), .9), rgba(map-get(variables.$colors, primary-dark), .9)),
    url('../images/background-pattern.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
  backdrop-filter: blur(10px);
  background-size: cover;
  position: relative;
}

.hero {
  display: flex;
  flex-direction: column;
  color: map-get(variables.$colors, light);

  height: 100dvh;
  height: 100vh;


  & .badge {
    margin-bottom: 4rem;
  }

  & .hero-transition-image-container {
    align-self: center;
    margin-top: 10rem;

    img {
      width: 75vw;

      @include respond(992px) {
        width: 100vw;
      }

    }

    @include respond(992px) {
      margin-top: 20rem;
    }

    @include respond(480px) {
      width: 50vw;
      margin-top: 12rem;
    }
  }

  & .hero-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 0 2.4rem;
    margin-top: 3.6rem;

    & p {
      font-size: 2.4rem;
      margin-bottom: 2.4rem;
      max-width: 70vw;
    }

    .buttons {
      display: flex;
      gap: 2.4rem;
      margin-top: 3.2rem;

      @include respond(480px) {
        flex-direction: column;
        align-items: center;

        &>.btn {
          width: 40vw;
        }
      }
    }

    @include respond(992px) {
      margin-top: 12rem;
    }

    @include respond(480px) {
      margin-top: 25%;
    }

  }
}